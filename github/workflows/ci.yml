name: CI

on:
  push:
    branches:
      - 'feature/*'
      - main
    paths-ignore:
      - README.md
      - docs/**
      - Dockerfile
      - docker-compose.yml
  pull_request:
    branches:
      - 'feature/*'
    paths-ignore:
      - README.md
      - docs/**
      - Dockerfile
      - docker-compose.yml

jobs:
  rspec:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    services:
      db:
        image: postgres:13.3
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          BIND-ADDRESS: 0.0.0.0
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          REDIS_HOST: redis
          REDIS_PORT: 6379
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: Cache node modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: bundle install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: yarn install
        run:  yarn install --check-files
      - name: migration
        run: |
          bundle exec rails db:create
          bundle exec rails db:test:prepare
      - name: run rspec
        run: bundle exec rspec

  rubocop:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: bundle install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: run rubocop
        run: |
          bundle exec rubocop

  brakeman:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: bundle install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: run brakeman
        run: |
          bundle exec brakeman -6 -A -w 1

  success_notify:
    needs: [rspec, rubocop, brakeman]
    runs-on: ubuntu-latest
    steps:
      - name: slack notify
        uses: rtCamp/action-slack-notify@v2.1.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'CI suceeded :white_check_mark: on https://github.com/hiromitsusasaki/sharinglist_rails'
          SLACK_CHANNEL: dev
          SLACK_USERNAME: 'CI on GitHub Actions'
          SLACK_ICON: 'https://avatars.githubusercontent.com/u/44036562'

  failure_notify:
    if: failure()
    needs: [rspec, rubocop, brakeman]
    runs-on: ubuntu-latest
    steps:
      - name: slack notify
        uses: rtCamp/action-slack-notify@v2.1.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'CI failed :x: on https://github.com/hiromitsusasaki/sharinglist_rails'
          SLACK_CHANNEL: dev
          SLACK_COLOR: '#FF0000'
          SLACK_USERNAME: 'CI on GitHub Actions'
          SLACK_ICON: 'https://avatars.githubusercontent.com/u/44036562'
